input FormCreateUserInput {
    fullName: String!
    email: String!
    password: String!
}

input FormCreateShopInput {
    name: String!
    address: String!
    phoneNumber: String!
}

type FormOutputCreateShops {
    isSuccess: Boolean!
    token: String
    error: String
}

type FormOutputCreateUser {
    isSuccess: Boolean!
    token: String
    error: String
}

input FormLoginInput {
    email: String!
    password: String!
}

type User {
    fullName: String
    email: String
    password: String
}

type Shops {
    name: String
    address: String
    phoneNumber: String
}

type Mutation {
    createUser(form: FormCreateUserInput!): FormOutputCreateUser
    createShops(shopforms: FormCreateShopInput!): FormOutputCreateShops
    login(form: FormLoginInput!): FormOutputCreateUser
}

type Query {
    getUsers: [User]
    getEmail(email: String): User
    getName(name: String): Shops
    getShops: [Shops]
}